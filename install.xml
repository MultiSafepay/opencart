<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <name>MultiSafepay: For OpenCart version 2.0.X and 2.1.X</name>
    <version>1.0</version>
    <code>MSP-OC-PATCH</code>
    <author>MultiSafepay</author>
    <link>https://www.multisafepay.com</link>
    <!-- msp_all_methods_at_front -->
    <file path="catalog/controller/checkout/payment_method.php">
        <operation info="Set all payment methods at front. Operation 1">
            <search><![CDATA[$recurring = $this->cart->hasRecurringProducts();]]></search>
            <add position="replace" offset="28"><![CDATA[

        $recurring = $this->cart->hasRecurringProducts();

        foreach ($results as $result) {
            if ($this->config->get($result['code'] . '_status')) {
                $this->load->model('payment/' . $result['code']);
                $method = $this->{'model_payment_'  . $result['code']}->getMethod($this->session->data['payment_address'], $total);
                $method_data = $this->extractPaymentMethodsArray($method, $result, $total, $recurring, $method_data);
            }
        }

        $method_data = $this->sortMethods($method_data);
        $this->session->data['payment_methods'] = $method_data;

            ]]>
            </add>
        </operation>
        <operation info="Set all payment methods at front. Operation 2">
            <search><![CDATA[public function save() {]]></search>
            <add position="before"><![CDATA[

    private function sortMethods($method_data) {
        $sort_order = array();
        foreach($method_data as $key => $value) {
            if(strpos($key, 'multisafepay') !== false && $value['sort_order']) {
                $sort_order[$key] = $this->config->get('multisafepay_sort_order') . '.' . $value['sort_order'];
            }
            if(strpos($key, 'multisafepay') !== false && !$value['sort_order']) {
                $sort_order[$key] = $this->config->get('multisafepay_sort_order');
            }
            if(strpos($key, 'multisafepay') === false) {
                $sort_order[$key] = $value['sort_order'];
            }
        }
        array_multisort($sort_order, SORT_ASC, SORT_NATURAL, $method_data);
        return $method_data;
    }

    private function extractPaymentMethodsArray($method, $extension, $total, $recurring = false, $method_data = array()) {
        if ($method && $extension['code'] === 'multisafepay' && !$recurring) {
            $methods = $this->{'model_payment_' .$extension['code']}->getMethods($this->session->data['payment_address'],
                $total);
            foreach ($methods as $msp_method) {
                $method_data[$msp_method['code']] = $msp_method;
            }
        }
        if ($method && $extension['code'] !== 'multisafepay' && $recurring) {
            if (property_exists($this->{'model_payment_' .$extension['code']},
                    'recurringPayments') && $this->{'model_payment_' .$extension['code']}->recurringPayments()) {
                $method_data[$method['code']] = $method;
            }
        }
        if ($method && $extension['code'] !== 'multisafepay' && !$recurring) {
            $method_data[$method['code']] = $method;
        }
        return $method_data;
    }

            ]]>
            </add>
        </operation>
    </file>
    <!-- msp_all_methods_at_back -->
    <file path="catalog/controller/api/payment.php">
        <operation info="Set all payment methods at back. Operation 1">
            <search><![CDATA[$recurring = $this->cart->hasRecurringProducts();]]></search>
            <add position="replace" offset="18"><![CDATA[

				$recurring = $this->cart->hasRecurringProducts();
                foreach ($results as $result) {
                    if ($this->config->get($result['code'] . '_status') && $result['code'] !== 'multisafepay') {
                        $json['payment_methods'] = $this->extractPaymentMethodsJsonFromOpenCart($result, $this->session->data['payment_address'], $total, $json['payment_methods'], $recurring);
                    }
                    if ($this->config->get($result['code'] . '_status') && $result['code'] === 'multisafepay') {
                        $json['payment_methods'] = $this->extractPaymentMethodsJsonFromMultisafePay($result, $this->session->data['payment_address'], $total, $json['payment_methods']);
                    }
                }

                ]]>
            </add>
        </operation>
        <operation info="Set all payment methods at back. Operation 2">
            <search><![CDATA[public function method() {]]></search>
            <add position="before"><![CDATA[

    private function extractPaymentMethodsJsonFromMultisafePay($extension, $address, $total, $payment_methods) {
        $this->load->model('payment/' . $extension['code']);
        $methods = $this->{'model_payment_'  . $extension['code']}->getMethods($address, $total);
        if ($methods) {
            foreach ($methods as $msp_method) {
                $payment_methods[$msp_method['code']] = $msp_method;
            }
        }
        return $payment_methods;
    }

    private function extractPaymentMethodsJsonFromOpenCart($extension, $address, $total, $payment_methods, $recurring) {
        $this->load->model('payment/' . $extension['code']);
        $method = $this->{'model_payment_'  . $extension['code']}->getMethod($address, $total);
        if ($method && $recurring) {
            if (property_exists($this->{'model_payment_' .$extension['code']},
                    'recurringPayments') && $this->{'model_payment_' . $extension['code']}->recurringPayments()) {
                $payment_methods[$extension['code']] = $method;
            }
        }

        if ($method && !$recurring) {
            $payment_methods[$extension['code']] = $method;
        }

        return $payment_methods;
    }

                ]]>
            </add>
        </operation>
    </file>
    <!-- msp_set_invoiced_to_msp -->
    <file path="admin/model/sale/order.php">
        <operation info="Set as invoiced an order from OC. Operation 1">
            <search><![CDATA[$order_info = $this->getOrder($order_id);]]></search>
            <add position="after"><![CDATA[

        $this->load->model('payment/multisafepay');
        if(strpos($order_info['payment_code'], 'multisafepay') !== false) {
            $invoice_no = $this->model_payment_multisafepay->getNextInvoiceId($order_id);
            $invoice_id = $order_info['invoice_prefix'] . $invoice_no;
            $this->registry->set('multisafepay', new Multisafepay($this->registry));
            $sdk = $this->multisafepay->getSdkObject();
            $transaction_manager = $sdk->getTransactionManager();
            $update_order = new MultiSafepay\Api\Transactions\UpdateRequest();
            $update_order->addData(array('invoice_id' => $invoice_id));
            $transaction_manager->update($order_id, $update_order);
        }

        if( (strpos($order_info['payment_code'], 'multisafepay') !== false) && $this->config->get('multisafepay_debug_mode')) {
            $this->log->write('OpenCart Event to send invoice ID: ' . $invoice_id . ' to MSP, for Order ID '.$order_id);
        }

                ]]>
            </add>
        </operation>
    </file>
    <!-- msp_set_order_tab -->
    <file path="admin/controller/sale/order.php">
        <operation error="skip" info="Set MultiSafepay Order tab in admin order view for OC 2.1. Previous version do not have order tab. Operation 1">
            <search><![CDATA[$content = $this->load->controller('payment/' . $order_info['payment_code'] . '/order');]]></search>
            <add position="replace" offset="10"><![CDATA[

			$this->load->model('sale/order');
            $order_info = $this->model_sale_order->getOrder($order_id);
            $this->registry->set('multisafepay', new Multisafepay($this->registry));
            $msp_order = $this->multisafepay->getOrderObject($order_id);
            if($msp_order && $msp_order->getTransactionId()) {
                if( (strpos($order_info['payment_code'], 'multisafepay') !== false) && $this->user->hasPermission('access', 'payment/multisafepay') ) {
                    $this->load->language('payment/multisafepay');
                    $content = $this->load->controller('payment/multisafepay/order');
                    $args['tabs'][] = array(
                        'code'    => 'multisafepay-order',
                        'title'   => $this->language->get('tab_order'),
                        'content' => $content
                    );
                }
            }

            if( (strpos($order_info['payment_code'], 'multisafepay') === false) && $this->user->hasPermission('access', 'payment/' . $order_info['payment_code']) ) {
                if (is_file(DIR_CATALOG . 'controller/payment/' . $order_info['payment_code'] . '.php')) {
                    $content = $this->load->controller('payment/' . $order_info['payment_code'] . '/order');
                }
                if (!is_file(DIR_CATALOG . 'controller/payment/' . $order_info['payment_code'] . '.php')) {
                    $content = '';
                }
                if ($content) {
                    $this->load->language('payment/' . $order_info['payment_code']);
                    $args['tabs'][] = array(
                        'code'    => $order_info['payment_code'],
                        'title'   => $this->language->get('heading_title'),
                        'content' => $content
                    );
                }
            }

            ]]>
            </add>
        </operation>
    </file>
    <!-- msp_payment_links_at_email -->
    <file path="catalog/model/checkout/order.php">
        <operation error="skip" info="Set payment link in orders generated from admin in OpenCart 2.0.X">
            <search><![CDATA[public function addOrderHistory($order_id, $order_status_id, $comment = '', $notify = false) {]]></search>
            <add position="after"><![CDATA[

        $this->load->language('payment/multisafepay');
        $this->load->model('checkout/order');
        $this->load->model('payment/multisafepay');
        $order_info = $this->model_checkout_order->getOrder($order_id);

        if ((strpos($order_info['payment_code'], 'multisafepay') !== false)) {

            $order_statuses = $this->model_payment_multisafepay->getOrderStatuses();
            $payment_request_order_status_id = $this->config->get('multisafepay_order_status_id_initialize_payment_request');
            $order_status_key = array_search($payment_request_order_status_id, array_column($order_statuses, 'order_status_id'));

            if($order_status_id == $order_statuses[$order_status_key]['order_status_id']) {
                $this->registry->set('multisafepay', new Multisafepay($this->registry));
                $gateways = $this->multisafepay->getGateways();
                $order_payment_method = $order_info['payment_code'];
                $gateway_key = array_search($order_payment_method, array_column($gateways, 'route'));

                $gateway = (($gateway_key) ? $gateways[$gateway_key]['id'] : '');
                $order_request = array(
                    'order_id' => $order_id,
                    'action'   => $this->url->link('payment/multisafepay/confirm', '', true),
                    'back'     => $this->url->link('checkout/checkout', '', true),
                    'test_mode'=> (($this->config->get('multisafepay_environment')) ? true : false),
                    'type'     => 'paymentlink',
                    'gateway'  => $gateway
                );
                $msp_order = $this->multisafepay->getOrderRequestObject($order_request);
                $order_request = $this->multisafepay->processOrderRequestObject($msp_order);
                if ($order_request->getPaymentUrl()) {
                    $payment_link = $order_request->getPaymentUrl();
                    if ($this->config->get('multisafepay_debug_mode')) {
                        $this->log->write('Start transaction in MSP for order ID ' . $order_id . ' on ' . date($this->language->get('datetime_format')));
                    }
                    $order_history_comment = sprintf($this->language->get('text_payment_link_admin_order_history'), $payment_link, $payment_link);
                    $this->model_payment_multisafepay->addPaymentLinkToOrderHistory($order_id, $payment_request_order_status_id, $order_history_comment, false);
                    $comment = sprintf($this->language->get('text_payment_link'), $payment_link, $payment_link);
                    $notify = true;
                }
            }
        }

            ]]>
            </add>
        </operation>
        <operation error="skip" info="Set payment link in orders generated from admin in OpenCart 2.1.X">
            <search><![CDATA[public function addOrderHistory($order_id, $order_status_id, $comment = '', $notify = false, $override = false) {]]></search>
            <add position="after"><![CDATA[

        $this->load->language('payment/multisafepay');
        $this->load->model('checkout/order');
        $this->load->model('payment/multisafepay');
        $order_info = $this->model_checkout_order->getOrder($order_id);

        if ((strpos($order_info['payment_code'], 'multisafepay') !== false)) {

            $order_statuses = $this->model_payment_multisafepay->getOrderStatuses();
            $payment_request_order_status_id = $this->config->get('multisafepay_order_status_id_initialize_payment_request');
            $order_status_key = array_search($payment_request_order_status_id, array_column($order_statuses, 'order_status_id'));

            if($order_status_id == $order_statuses[$order_status_key]['order_status_id']) {
                $this->registry->set('multisafepay', new Multisafepay($this->registry));
                $gateways = $this->multisafepay->getGateways();
                $order_payment_method = $order_info['payment_code'];
                $gateway_key = array_search($order_payment_method, array_column($gateways, 'route'));

                $gateway = (($gateway_key) ? $gateways[$gateway_key]['id'] : '');
                $order_request = array(
                    'order_id' => $order_id,
                    'action'   => $this->url->link('payment/multisafepay/confirm', '', true),
                    'back'     => $this->url->link('checkout/checkout', '', true),
                    'test_mode'=> (($this->config->get('multisafepay_environment')) ? true : false),
                    'type'     => 'paymentlink',
                    'gateway'  => $gateway
                );
                $msp_order = $this->multisafepay->getOrderRequestObject($order_request);
                $order_request = $this->multisafepay->processOrderRequestObject($msp_order);
                if ($order_request->getPaymentUrl()) {
                    $payment_link = $order_request->getPaymentUrl();
                    if ($this->config->get('multisafepay_debug_mode')) {
                        $this->log->write('Start transaction in MSP for order ID ' . $order_id . ' on ' . date($this->language->get('datetime_format')));
                    }
                    $order_history_comment = sprintf($this->language->get('text_payment_link_admin_order_history'), $payment_link, $payment_link);
                    $this->model_payment_multisafepay->addPaymentLinkToOrderHistory($order_id, $payment_request_order_status_id, $order_history_comment, false);
                    $comment = sprintf($this->language->get('text_payment_link'), $payment_link, $payment_link);
                    $notify = true;
                }
            }
        }

            ]]>
            </add>
        </operation>
    </file>
    <file path="admin/model/setting/setting.php">
        <operation info="Add getSettingValue function">
            <search><![CDATA[public function editSettingValue($code = '', $key = '', $value = '', $store_id = 0) {]]></search>
            <add position="before"><![CDATA[
	public function getSettingValue($key, $store_id = 0) {
		$query = $this->db->query("SELECT value FROM " . DB_PREFIX . "setting WHERE store_id = '" . (int)$store_id . "' AND `key` = '" . $this->db->escape($key) . "'");

		if ($query->num_rows) {
			return $query->row['value'];
		} else {
			return null;
		}
	}
            ]]>
            </add>
        </operation>
    </file>
    <file path="admin/view/template/sale/order_info.tpl">
        <operation error="skip" info="Add buttons to set the order as shipped, cancelled, or refunds">
            <search><![CDATA[<div class="pull-right"><a href="<?php echo $invoice; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_invoice_print; ?>" class="btn btn-info"><i class="fa fa-print"></i></a> <a href="<?php echo $shipping; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_shipping_print; ?>" class="btn btn-info"><i class="fa fa-truck"></i></a> <a href="<?php echo $edit; ?>" data-toggle="tooltip" title="<?php echo $button_edit; ?>" class="btn btn-primary"><i class="fa fa-pencil"></i></a> <a href="<?php echo $cancel; ?>" data-toggle="tooltip" title="<?php echo $button_cancel; ?>" class="btn btn-default"><i class="fa fa-reply"></i></a></div>]]></search>
            <add position="replace"><![CDATA[
            <div class="pull-right"><?php if($status == 'completed' || $status == 'shipped' || $status == 'initialized' || $status == 'expired') { ?><?php if($status == 'completed' || $status == 'shipped') { ?><a href="#" id="button-refund" data-toggle="tooltip" title="<?php echo $button_refund; ?>" class="btn btn-info"><i class="fa fa-step-backward"></i></a><?php } ?> <?php if($status == 'initialized') { ?><a href="#" id="button-cancel" data-toggle="tooltip" title="<?php echo $button_cancel; ?>" class="btn btn-info"><i class="fa fa-times"></i></a><?php } ?>  <?php if($status == 'completed' || $status == 'initialized') { ?><a href="#" id="button-shipped" data-toggle="tooltip" title="<?php echo $button_shipped; ?>" class="btn btn-info"><i class="fa fa-plane"></i></a><?php } ?><?php } ?>  <a href="<?php echo $invoice; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_invoice_print; ?>" class="btn btn-info"><i class="fa fa-print"></i></a> <a href="<?php echo $shipping; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_shipping_print; ?>" class="btn btn-info"><i class="fa fa-truck"></i></a> <a href="<?php echo $edit; ?>" data-toggle="tooltip" title="<?php echo $button_edit; ?>" class="btn btn-primary"><i class="fa fa-pencil"></i></a> <a href="<?php echo $cancel; ?>" data-toggle="tooltip" title="<?php echo $button_cancel; ?>" class="btn btn-default"><i class="fa fa-reply"></i></a></div>
            ]]>
            </add>
        </operation>
        <operation error="skip" info="Add scripts">
            <search><![CDATA[<?php echo $footer; ?> ]]></search>
            <add position="before"><![CDATA[
<?php if($status == 'completed' || $status == 'shipped' || $status == 'initialized' || $status == 'expired') { ?>
    <?php if($status == 'completed' || $status == 'shipped') { ?>
        <script type="text/javascript"><!--
            $('#button-refund').on('click', function(e) {
                e.preventDefault();
                if (confirm('<?php echo $text_refund_confirm; ?>')) {
                    $.ajax({
                        url: 'index.php?route=payment/multisafepay/refundOrder&<?php echo $token_name; ?>=<?php echo $token; ?>&order_id=<?php echo $order_id; ?>',
                        dataType: 'json',
                        async: false,
                        beforeSend: function() {
                            $('#button-refund').button('loading');
                        },
                        complete: function() {
                            $('#button-refund').button('reset');
                        },
                        success: function(json) {
                            if (json['error']) {
                                $('#tab-multisafepay-order').append('<div class="alert alert-danger alert-dismissible">' + json['error'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                            }
                            if (json['success']) {
                                $('#history').load('index.php?route=sale/order/history&<?php echo $token_name; ?>=<?php echo $token; ?>&order_id=<?php echo $order_id; ?>');
                                $('#content > .container-fluid').prepend('<div class="alert alert-success alert-dismissible">' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                $('#button-cancel').remove();
                                $('#button-refund').remove();
                                $('#button-shipped').remove();
                            }
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                        }
                    });
                }
            });
            //--></script>
    <?php } ?>
    <?php if($status == 'initialized') { ?>
        <script type="text/javascript"><!--
            $('#button-cancel').on('click', function(e) {
                e.preventDefault();
                if (confirm('<?php echo $text_cancelled_confirm; ?>')) {
                    $.ajax({
                        url: 'index.php?route=payment/multisafepay/changeMultiSafepayOrderStatusTo&<?php echo $token_name; ?>=<?php echo $token; ?>&order_id=<?php echo $order_id; ?>&type=cancelled',
                        dataType: 'json',
                        async: false,
                        beforeSend: function() {
                            $('#button-cancel').button('loading');
                        },
                        complete: function() {
                            $('#button-cancel').button('reset');
                        },
                        success: function(json) {
                            if (json['error']) {
                                $('#tab-multisafepay-order').append('<div class="alert alert-danger alert-dismissible">' + json['error'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                            }
                            if (json['success']) {
                                $('#history').load('index.php?route=sale/order/history&<?php echo $token_name; ?>=<?php echo $token; ?>&order_id=<?php echo $order_id; ?>');
                                $('#content > .container-fluid').prepend('<div class="alert alert-success alert-dismissible">' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                $('#button-cancel').remove();
                                $('#button-refund').remove();
                                $('#button-shipped').remove();
                            }
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                        }
                    });
                }
            });
            //--></script>
    <?php } ?>
    <?php if($status == 'completed' || $status == 'initialized') { ?>
        <script type="text/javascript"><!--
            $('#button-shipped').on('click', function(e) {
                e.preventDefault();
                if (confirm('<?php echo $text_shipped_confirm; ?>')) {
                    $.ajax({
                        url: 'index.php?route=payment/multisafepay/changeMultiSafepayOrderStatusTo&<?php echo $token_name; ?>=<?php echo $token; ?>&order_id=<?php echo $order_id; ?>&type=shipped',
                        dataType: 'json',
                        async: false,
                        beforeSend: function() {
                            $('#button-shipped').button('loading');
                        },
                        complete: function() {
                            $('#button-shipped').button('reset');
                        },
                        success: function(json) {
                            if (json['error']) {
                                $('#tab-multisafepay-order').append('<div class="alert alert-danger alert-dismissible">' + json['error'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                            }
                            if (json['success']) {
                                $('#history').load('index.php?route=sale/order/history&<?php echo $token_name; ?>=<?php echo $token; ?>&order_id=<?php echo $order_id; ?>');
                                $('#content > .container-fluid').prepend('<div class="alert alert-success alert-dismissible">' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                $('#button-cancel').remove();
                                $('#button-shipped').remove();
                            }
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                        }
                    });
                }
            });
            //--></script>
    <?php } ?>
<?php } ?>
            ]]>
            </add>
        </operation>
    </file>
    <file path="admin/controller/sale/order.php">
        <operation error="skip" info="Add texts">
            <search><![CDATA[public function info() {]]></search>
            <add position="after"><![CDATA[
			$data = $this->getTexts();
            ]]>
            </add>
        </operation>
        <operation error="skip" info="Add texts">
            <search><![CDATA[public function info() {]]></search>
            <add position="before"><![CDATA[

    public function getAdditionalTextsKeys() {
        $additional_keys = array(
            'button_cancel',
            'button_refund',
            'button_shipped',
            'text_refund_confirm',
            'text_cancelled_confirm',
            'text_shipped_confirm'
        );
        return $additional_keys;
    }

    public function getTexts() {
        $this->registry->set('multisafepay', new Multisafepay($this->registry));
        $data = $this->multisafepay_version_control->getLanguageKeys($this->route, $this->getAdditionalTextsKeys());
        return $data;
    }

            ]]>
            </add>
        </operation>
        <operation error="skip" info="Add buttons to set the order as shipped, cancelled, or refunds">
            <search><![CDATA[$this->response->setOutput($this->load->view('sale/order_info.tpl', $data));]]></search>
            <add position="before"><![CDATA[
			$this->registry->set('multisafepay', new Multisafepay($this->registry));
			$msp_order = $this->multisafepay->getOrderObject($this->request->get['order_id']);
			if(!$msp_order || !$msp_order->getTransactionId()) {
			    $data['status'] = false;
			} else {
    			$data['status'] = $msp_order->getStatus();
			}
			// if( (strpos($order_info['payment_code'], 'multisafepay') !== false)
            $data['token_name'] = $this->token_name;
            $data['token'] = $this->session->data['token'];
            $data['order_id'] = $this->request->get['order_id'];

            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/model/checkout/order.php">
        <operation info="Remove HTML from payment method">
            <search><![CDATA[public function addOrder($data) {]]></search>
            <add position="after"><![CDATA[
		if (strpos($data['payment_code'], 'multisafepay') !== false) {
            $data['payment_method'] = trim(strip_tags($data['payment_method']));
		}
                ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/model/checkout/order.php">
        <operation info="Remove HTML from payment method">
            <search><![CDATA[public function editOrder($order_id, $data) {]]></search>
            <add position="after"><![CDATA[
		if (strpos($data['payment_code'], 'multisafepay') !== false) {
            $data['payment_method'] = trim(strip_tags($data['payment_method']));
		}
                ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/checkout.php">
        <operation info="Adding JS and CSS for Payment Component">
            <search><![CDATA[$this->load->language('checkout/checkout');]]></search>
            <add position="after"><![CDATA[
        $this->document->addScript('https://pay.multisafepay.com/sdk/components/v2/components.js');
        $this->document->addStyle('https://pay.multisafepay.com/sdk/components/v2/components.css');
        $this->document->addScript('catalog/view/javascript/multisafepay/multisafepay.js');
        $this->document->addScript('catalog/view/javascript/multisafepay/applepay.js');
        $this->document->addStyle('catalog/view/theme/default/stylesheet/multisafepay/multisafepay.css');
        $this->document->addStyle('catalog/view/theme/default/stylesheet/multisafepay/select2.min.css');
        $this->document->addScript('catalog/view/javascript/multisafepay/select2.min.js');
        $this->document->addScript('https://pay.google.com/gp/p/js/pay.js');
                ]]>
            </add>
        </operation>
    </file>
</modification>
